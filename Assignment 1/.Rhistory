P_red_con_A = 2/(5+7)
P_red_con_B = 4/(4+1)
P_red_con_C = 1/(1+3)
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
sum(boxes[,1])
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = 2/(5+7)
P_red_con_B = 4/(4+1)
P_red_con_C = 1/(1+3)
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
(boxes[1,1])
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/(5+7)
P_red_con_B = 4/(4+1)
P_red_con_C = 1/(1+3)
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
boxes[2,1]
rowSums(boxes)
rowSums(boxes)[1]
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
P_red(boxes = boxes)
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_A
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A*P_A/P_red_res
P_B_con_red = P_red_con_B*P_B/P_red_res
P_C_con_red = P_red_con_C*P_C/P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(red)
}
P_box(boxes=boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A*P_A/P_red_res
P_B_con_red = P_red_con_B*P_B/P_red_res
P_C_con_red = P_red_con_C*P_C/P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(red)
}
P_box(boxes=boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A*P_A/P_red_res
P_B_con_red = P_red_con_B*P_B/P_red_res
P_C_con_red = P_red_con_C*P_C/P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(red)
}
P_box(boxes = boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(red)
}
P_box(boxes = boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(res)
}
P_box(boxes = boxes)
setwd("~/GitHub/Beysian-Data-Analysis-course-F2021/Assignment 1")
library(aaltobda)
library(aaltobda)
data("algae")
n = size8(algae)
n = size(algae)
n = length(algae)
E = 0.16
alpha = 1
beta = -(alpha/E)*(E-1)
?seq
seq(from = 1, to=100, by = 5 )
alpha = seq(from = 1, to=100, by = 5 )
beta = -(alpha/E)*(E-1)
E = 0.2
alpha = seq(from = 1, to=100, by = 5 )
beta = -(alpha/E)*(E-1)
beta = alpha*(1-1/E)
beta = -(alpha/E)*(E-1)
post_median = beta_point_est(alpha, beta, data)
beta_point_est <- function(prior_alpha, prior_beta, data) {
n <- length(data)
y <- sum(data)
alpha <- prior_alpha+y
beta <- prior_beta+n-y
e <- alpha/(alpha+beta)
return(e)
}
post_median = beta_point_est(alpha, beta, data)
post_median = beta_point_est(alpha, beta, data)
post_median = beta_point_est(1, 1, data)
post_median = beta_point_est(alpha, beta, algae)
intervals = beta_interval(alpha, beta, algae)
beta_interval <- function(prior_alpha, prior_beta, data, prob) {
n <- length(data)
y <- sum(data)
alpha <- prior_alpha+y
beta <- prior_beta+n-y
q_low <- qbeta((1-prob)/2, alpha, beta)
q_high <- qbeta(prob+(1-prob)/2, alpha, beta)
return(c(q_low, q_high))
intervals = beta_interval(alpha, beta, algae)
beta_interval <- function(prior_alpha, prior_beta, data, prob) {
n <- length(data)
y <- sum(data)
alpha <- prior_alpha+y
beta <- prior_beta+n-y
q_low <- qbeta((1-prob)/2, alpha, beta)
q_high <- qbeta(prob+(1-prob)/2, alpha, beta)
return(c(q_low, q_high))
post_median = beta_point_est(alpha, beta, algae)
intervals = beta_interval(alpha, beta, algae)
beta_interval <- function(prior_alpha, prior_beta, data, prob) {
n <- length(data)
y <- sum(data)
alpha <- prior_alpha+y
beta <- prior_beta+n-y
q_low <- qbeta((1-prob)/2, alpha, beta)
q_high <- qbeta(prob+(1-prob)/2, alpha, beta)
return(c(q_low, q_high))
}
post_median = beta_point_est(alpha, beta, algae)
intervals = beta_interval(alpha, beta, algae)
intervals = beta_interval(alpha, beta, algae, 0.9)
plot(post_median)
plot(intervals)
post_median
plot(post_median)
plot(post_median, alpha+beta)
plot(alpha+beta, post_median)
?beta
?rbeta
rbeta(270, alpha, beta)
median(rbeta(270, alpha, beta))
post_median = median(rbeta(270, alpha, beta))
for i in 1:length(alpha){
post_median = median(rbeta(270, alpha, beta))
}
for (i in 1:length(alpha)){
post_median = median(rbeta(270, alpha, beta))
}
for (i in 1:n){
post_median = median(rbeta(270, alpha, beta))
}
?zeros
?zero
?ones
post_median = numeric(n)
for (i in 1:n){
post_median = median(rbeta(270, alpha, beta))
}
post_median = numeric(n)
for (i in 1:n){
post_median(i) = median(rbeta(270, alpha, beta))
}
post_median[i] = median(rbeta(270, alpha, beta))
post_median = numeric(n)
for (i in 1:n){
post_median[i] = median(rbeta(270, alpha, beta))
}
plot(alpha+beta, post_median)
for (i in 1:n+1){
post_median[i] = median(rbeta(270, alpha, beta))
}
plot(alpha+beta, post_median)
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(270, alpha, beta))
}
plot(alpha+beta, post_median)
post_median = numeric(length(alpha))
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(270, alpha, beta))
}
plot(alpha+beta, post_median)
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(1270, alpha, beta))
}
plot(alpha+beta, post_median)
post_median[i] = median(rbeta(270, alpha, beta))
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(270, alpha, beta))
}
post_median[i] = median(rbeta(n, alpha, beta))
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(n, alpha, beta))
}
for (i in 1:length(alpha)){
post_median[i] = median(rbeta(n, alpha, beta))
}
plot(alpha+beta, post_median)
post_median = beta_point_est(alpha, beta, algae)
plot(alpha+beta, post_median)
intervals = beta_interval(alpha, beta, algae, 0.9)
intervals = (beta_interval(alpha, beta, algae, 0.9))
beta_interval(alpha, beta, algae, 0.9)
intervals = as.tuple(beta_interval(alpha, beta, algae, 0.9))
prior_alpha = seq(from = 1, to=100, by = 5 )
prior_beta = -(alpha/E)*(E-1)
alpha = prior_alpha+y
beta = prior_beta+n-y
y = sum(data)
E = 0.2
prior_alpha = seq(from = 1, to=100, by = 5 )
prior_beta = -(alpha/E)*(E-1)
alpha = prior_alpha+y
beta = prior_beta+n-y
y = sum(algae)
E = 0.2
prior_alpha = seq(from = 1, to=100, by = 5 )
prior_beta = -(alpha/E)*(E-1)
alpha = prior_alpha+y
beta = prior_beta+n-y
plot(rbeta(n,alpha[1],beta[1]))
plot(pbeta(n,alpha[1],beta[1]))
?rbeta
plot(dbeta(n,alpha[1],beta[1]))
plot(dbeta(1:n,alpha[1],beta[1]))
plot(dbeta(1:n,alpha[10],beta[10]))
dbeta(1:n,alpha[2],beta[1])
alpha[2]
beta[1]
1:n
dbeta(1:n,alpha[1],beta[1])
betapdf = dbeta(1:n,alpha,beta)
plot(x, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(1:n, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
x= 1:n
betapdf = dbeta(x,alpha,beta)
plot(x, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
betapdf = dbeta(x,alpha[20],beta[20])
x= seq(from=0,to=1, by=1/270)
betapdf = dbeta(x,alpha[20],beta[20])
plot(x, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
betapdf = dbeta(x,alpha[1],beta[1])
plot(x, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
betapdf = dbeta(x,alpha[10],beta[10])
plot(x, betapdf,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p3 = plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p4 = plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
betapdf1 = dbeta(x,alpha[1],beta[1])
betapdf2 = dbeta(x,alpha[7],beta[7])
betapdf3 = dbeta(x,alpha[14],beta[14])
betapdf4 = dbeta(x,alpha[20],beta[20])
p1 = plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p2 = plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p3 = plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p4 = plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
grid.arrange(p1, p2, p3, p4, nrow = 2)
library(ggplot)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
p1 = plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p2 = plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p3 = plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p4 = plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
grid.arrange(p1, p2, p3, p4, nrow = 2)
par(mfrow=c(2,2))
p1 = plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p2 = plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p3 = plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p4 = plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
p1
p2
p3
par(mfrow=c(2,2))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
par(mfrow=c(2,2))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
par(mfrow=c(1,1))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf1,
type='l',
#main='Beta-distribution PDF',
ylab= 'Density')
par(mfrow=c(2,2))
plot(x, betapdf1,
type='l',
#main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf1,
type='l')
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
prior_alpha = seq(from = 1, to=100, by = 4 )
prior_beta = -(alpha/E)*(E-1)
alpha = prior_alpha+y
beta = prior_beta+n-y
betapdf1 = dbeta(x,alpha[1],beta[1])
betapdf2 = dbeta(x,alpha[2],beta[2])
betapdf3 = dbeta(x,alpha[3],beta[3])
betapdf4 = dbeta(x,alpha[4],beta[4])
par(mfrow=c(2,2))
par(mar=c(1,1,1,1))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
par(mar=c(2,2,2,2))
plot(x, betapdf1,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf2,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf3,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf4,
type='l',
main='Beta-distribution PDF',
ylab= 'Density')
plot(x, betapdf1,
type='l')
plot(x, betapdf2,
type='l')
plot(x, betapdf3,
type='l')
plot(x, betapdf4,
type='l')
par(mar=c(3,3,3,3))
plot(x, betapdf1,
type='l')
plot(x, betapdf2,
type='l')
plot(x, betapdf3,
type='l')
plot(x, betapdf4,
type='l')
