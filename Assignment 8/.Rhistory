rm(list = ls())
library("rstan")
library("dplyr")
data <- read.csv(file = 'NGdata')
data <- read.csv(file = './NGdata')
data <- read.csv(file = '/NGdata')
data <- read.csv(file = 'NGdata.csv')
View(data)
data
means <- data %>% group_by(Jag.var.med.i.NG.chatten.innan.17.11.2021) %>% summarise(mean = mean(Year),
n = n())
ggplot(data, aes(x=Year, fill=Jag.var.med.i.NG.chatten.innan.17.11.2021)) +
geom_histogram(aes(y=..density..), binwidth = 5, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Jag.var.med.i.NG.chatten.innan.17.11.2021), linetype="dashed", size=1) +
geom_density(alpha=.2)
rm(list = ls())
library("rstan")
library("dplyr")
data <- read.csv(file = 'NGdata.csv')
View(data)
means <- data %>% group_by(Jag.var.med.i.NG.chatten.innan.17.11.2021) %>% summarise(mean = mean(Year),
n = n())
ggplot(data, aes(x=Year.padded, fill=Jag.var.med.i.NG.chatten.innan.17.11.2021)) +
geom_histogram(aes(y=..density..), binwidth = 5, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Jag.var.med.i.NG.chatten.innan.17.11.2021), linetype="dashed", size=1) +
geom_density(alpha=.2)
means <- data %>% group_by(Jag.var.med.i.NG.chatten.innan.17.11.2021) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Jag.var.med.i.NG.chatten.innan.17.11.2021)) +
geom_histogram(aes(y=..density..), binwidth = 5, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Jag.var.med.i.NG.chatten.innan.17.11.2021), linetype="dashed", size=1) +
geom_density(alpha=.2)
means <- data %>% group_by(Jag.var.med.i.NG.chatten.innan.17.11.2021) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Jag.var.med.i.NG.chatten.innan.17.11.2021)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Jag.var.med.i.NG.chatten.innan.17.11.2021), linetype="dashed", size=1) +
geom_density(alpha=.2)
data <- data %>%
rename(Jag.var.med.i.NG.chatten.innan.17.11.2021 = Pre)
data <- data %>%
rename(pre = Jag.var.med.i.NG.chatten.innan.17.11.2021)
data
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
rm(list = ls())
library("rstan")
library("dplyr")
data <- read.csv(file = 'NGdata.csv')
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021)
data
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(, aes(xintercept=mean(Year.padded)), linetype="dashed", size=1) +
geom_
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1) +
geom_
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1)
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1)
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1)
```{r, warning=FALSE}
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1)
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1)
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), linetype="dashed", size=1, color="#FF6666")
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
mean(data$Year.padded)
data$Year.padded
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
drop_na()
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
drop_na()
rm(list = ls())
library("rstan")
library("dplyr")
data <- read.csv(file = 'NGdata.csv')
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
data
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
```{r include=FALSE}
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
rm(list = ls())
library("rstan")
library("dplyr")
data <- read.csv(file = 'NGdata.csv')
data <- data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
data
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
rm(list = ls())
library("rstan")
library("dplyr")
raw_data <- read.csv(file = 'NGdata.csv')
data <- raw_data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
data
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
rm(list = ls())
library("rstan")
library("dplyr")
raw_data <- read.csv(file = 'NGdata.csv')
data <- raw_data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
View(data)
ggplot(data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
arrange(desc(Pre)) %>%
mutate(prop = count(Pre) / sum(data$Pre) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie_data <- data %>%
group_by(cit) %>%
summarize(n())
pie_data <- data %>%
group_by(Pre) %>%
summarize(n())
View(pie_data)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n())
View(pie_data)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = count(value) / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
View(pie_data)
View(pie_data)
sum(data$value)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
View(pie_data)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = Pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = Pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
View(pie_data)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", prop, "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = Pre)), color = "white", size=6) +
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = Pre), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", prop, "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(desc(value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=!Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", prop, "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange((value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", prop, "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
rm(list = ls())
library("rstan")
library("dplyr")
raw_data <- read.csv(file = 'NGdata.csv')
data <- raw_data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange((value)) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
rm(list = ls())
library("rstan")
library("dplyr")
raw_data <- read.csv(file = 'NGdata.csv')
data <- raw_data %>%
rename(Pre = Jag.var.med.i.NG.chatten.innan.17.11.2021) %>%
filter(!is.na(Year.padded))
ggplot(data, aes(x=Year.padded)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
geom_vline(aes(xintercept=mean(Year.padded)), color="blue", linetype="dashed", size=1)
means <- data %>% group_by(Pre) %>% summarise(mean = mean(Year.padded),
n = n())
ggplot(data, aes(x=Year.padded, fill=Pre)) +
geom_histogram(aes(y=..density..), binwidth = 1, colour="black",position = "identity", alpha = 0.4) +
geom_vline(data = means, aes(xintercept=mean, color = Pre), linetype="dashed", size=1) +
geom_density(alpha=.2)
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(value) %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(value) %>%
pie_data <- pie_data %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(value)
pie_data <- pie_data %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", prop, "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie_data <- data %>%
group_by(Pre) %>%
summarize(value = n()) %>%
arrange(value)
pie_data <- pie_data %>%
mutate(prop = value / sum(pie_data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
ggplot(pie_data, aes(x="", y=prop, fill=Pre)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = paste0(Pre, " - ", round(prop), "%")), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
rm(list = ls())
library(aaltobda)
library("rstan")
library(loo)
data("factory")
mean_mu_prior = 100
mean_sigma_prior = 10
sigma_prior = 10
separate_data <- list(
y = factory,
N = nrow(factory),
J = ncol(factory),
mean_mu_prior = mean_mu_prior,
mean_sigma_prior = mean_sigma_prior,
sigma_prior = sigma_prior
)
fit_separate = sampling(separatemodel,
data = separate_data,            # named list of data
chains = 4,             # number of Markov chains
warmup = 1000,          # number of warmup iterations per chain
iter = 2000,            # total number of iterations per chain
cores = 1,              # number of cores (could use one per chain)
refresh = 0             # no progress shown
)
log_like_separate = extract_log_lik(fit_separate, merge_chains = FALSE)
r_eff <- relative_eff(exp(log_like_separate), cores = 4)
loo_separate <- loo(log_like_separate, r_eff = r_eff, cores = 4)
p_loo_separate <- loo_separate$p_loo
print(loo_separate)
plot(loo_separate)
mean_mu_prior = 100
mean_sigma_prior = 10
sigma_prior = 10
pooled_data <- list(
y = unlist(factory),
N = nrow(factory),
J = ncol(factory),
mean_mu_prior = mean_mu_prior,
mean_sigma_prior = mean_sigma_prior,
sigma_prior = sigma_prior
)
fit_pooled = sampling(pooledmodel,
data = pooled_data,            # named list of data
chains = 4,             # number of Markov chains
warmup = 1000,          # number of warmup iterations per chain
iter = 2000,            # total number of iterations per chain
cores = 1,              # number of cores (could use one per chain)
refresh = 0             # no progress shown
)
log_like_pooled = extract_log_lik(fit_pooled, merge_chains = FALSE)
r_eff <- relative_eff(exp(log_like_pooled), cores = 4)
loo_pooled <- loo(log_like_pooled, r_eff = r_eff, cores = 4)
p_loo_pooled <- loo_pooled$p_loo
print(loo_pooled)
plot(loo_pooled)
mean_mu_prior = 100
mean_sigma_prior = 10
sigma_prior = 10
hierarchical_data <- list(
y = factory,
N = nrow(factory),
J = ncol(factory),
mean_mu_prior = mean_mu_prior,
mean_sigma_prior = mean_sigma_prior,
sigma_prior = sigma_prior
)
fit_hierarchical = sampling(hierarchicalmodel,
data = hierarchical_data,            # named list of data
chains = 4,             # number of Markov chains
warmup = 1000,          # number of warmup iterations per chain
iter = 2000,            # total number of iterations per chain
cores = 1,              # number of cores (could use one per chain)
refresh = 0             # no progress shown
)
log_like_hierarchical = extract_log_lik(fit_hierarchical, merge_chains = FALSE)
r_eff <- relative_eff(exp(log_like_hierarchical), cores = 4)
loo_hierarchical <- loo(log_like_hierarchical, r_eff = r_eff, cores = 4)
print(loo_hierarchical)
plot(loo_hierarchical)
p_loo_hierarchical <- loo_hierarchical$p_loo
loo_compare(loo_separate,loo_pooled,loo_hierarchical)
