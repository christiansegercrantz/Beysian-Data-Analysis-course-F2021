geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
annotate(data =finland_all, = geom = "text", x = Index, label = Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
annotate(data = finland_all, geom = "text", x = Index, label = Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
annotate(geom = "text", x = finland_all$Index, label = finland_all$Week)
?geom_text
?axis.text
?theme
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
theme(axis.text = Week, axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
theme(axis.text.x = element_text(finland_all$week, angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1]))) +
theme(axis.text.x = element_text(finland_all$week, angle = 60)) +
scale_fill_manual(values=c("#009E73","firebrick3"), name="Amount of positive tests") +
#geom_line(data=pred,aes(x = week, y = predictions, col="Prediction"), size=1.2, alpha = 0.7) + geom_text(data=tail(pred,future), aes(x = week, y = predictions, label=floor(predictions*coeff)), vjust=-0.8) +
scale_colour_manual(name="Lines",breaks = c("Cases","Tests","Prediction"),values=c("009E73","firebrick3","purple"))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1])), labels= Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n = length(finland_all[,1])), labels= finland_all$Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(finland_all[,1])), labels= finland_all$Week)
finland_all[,1]
length(finland_all[,1]))
length(finland_all[,1])
length(finland_all$Week)
scales::pretty_breaks(n =length(finland_all[,1]))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales='free_x', labels= finland_all$Week)
scales::pretty_breaks(n =length(finland_all[,1]))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales::pretty_breaks(n =length(finland_all[,1])), labels = finland_all$Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales::pretty_breaks(n =length(finland_all[,1])))
ggplot(data=finland_all, aes( x= reorder(Week,Index), group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales::pretty_breaks(n =length(finland_all[,1]))) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= reorder(Week,Index), group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n =length(finland_all[,1])))
ggplot(data=finland_all, aes( x= reorder(Week,Index), group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_discrete(breaks = scales::pretty_breaks(n =length(finland_all[,1]))) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = scales::pretty_breaks(n =length(finland_all[,1]))) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
#scale_x_continuous(breaks = scales::pretty_breaks(n =length(finland_all[,1]))) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(labels = Week) +
theme(axis.text.x = element_text(angle = 60))
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(labels = finland_all$Week)
runApp('GitHub/COVID-19-analysis')
View(finland)
date(Year 2020 Week 03)
date("Year 2020 Week 03"")
date("Year 2020 Week 03")
?pretty_breaks
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = length(finland_all[,1]), labels = Week)
shiny::runApp('GitHub/COVID-19-analysis')
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = length(finland_all[,1]), labels = finland_all$Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = 1:length(finland_all[,1]), labels = finland_all$Week)
ggplot(data=finland_all, aes( x= Index, group = 1, ) ) +
geom_line(aes(y=Cases, col="Cases")) + geom_text(aes(label=Cases, y=Cases),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Cases)) +
geom_line(aes(y=Tests/coeff, col="Tests")) + geom_text(aes(label=Tests, y=Tests/coeff),hjust=1.2, vjust=-0.6) + geom_point(aes(y=Tests/coeff), col = "firebrick3") +
scale_y_continuous(name = "Cases",sec.axis = sec_axis( trans=~.*coeff, name="Tests")) +
geom_ribbon(data=finland_all.interp, aes(x = tests.x, ymin = cases.y, ymax = pmin(cases.y, tests.y/coeff), fill = paste("More than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
geom_ribbon(data=finland_all.interp, aes(x = cases.x, ymin = tests.y/coeff, ymax = pmin(cases.y, tests.y/coeff), fill = paste("Less than ",1/coeff*100,"%", sep = "")), alpha=0.5) +
labs(fill = "Positiv test procentage") +
scale_x_continuous(breaks = 1:length(finland_all[,1]), labels = finland_all$Week) +
theme(axis.text.x = element_text(angle = 60)) +
scale_fill_manual(values=c("#009E73","firebrick3"), name="Amount of positive tests") +
#geom_line(data=pred,aes(x = week, y = predictions, col="Prediction"), size=1.2, alpha = 0.7) + geom_text(data=tail(pred,future), aes(x = week, y = predictions, label=floor(predictions*coeff)), vjust=-0.8) +
scale_colour_manual(name="Lines",breaks = c("Cases","Tests","Prediction"),values=c("009E73","firebrick3","purple"))
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
append(1:9,1:length(finland_all[,1]))
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
cos(1/500)
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
shiny::runApp('GitHub/COVID-19-analysis')
matrix(c(1,0,0.5,0,1,0.8),byrow=T,ncol=2)
matrix(c(1,0,0.5,0,1,0.8),byrow=T,ncol=3)
matrix(c(1,0,0.5,0,1,0.8,0.5,0.8,1),byrow=T,ncol=3)
A <- matrix(c(1,0,0.5,0,1,0.8,0.5,0.8,1),byrow=T,ncol=3)
eigen(A)
A <- matrix(c(0,0,0.5,0,1,0.8,0.5,0.8,1),byrow=T,ncol=3)
eigen(A)
shiny::runApp('GitHub/COVID-19-analysis')
View(finland)
View(finland_all)
View(finland_all)
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
shiny::runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
runApp('GitHub/COVID-19-analysis')
install.packages('IRkernel')
IRkernel::installspec(user = FALSE)
install.packages('IRkernel')
install.packages("IRkernel")
IRkernel::installspec(user = FALSE)
setwd("~/GitHub/Beysian-Data-Analysis-course-F2021/Assignment 1")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
rm(list = ls())
mu = 0.2
sigma2=0.01
alpha=mu*((mu*(1-mu)/sigma2)-1)
beta=alpha*(1-mu)/mu
x = seq(from=0,to=1, by=0.01)
betapdf = dbeta(x,alpha,beta)
plot(x, betapdf, type='l', main='Beta-distribution PDF')
n = 1000
sample = rbeta(n,alpha,beta)
hist(sample)
mean = mean(sample)
variance = var(sample)
CI95=quantile(sample,probs=c(0.025,0.975))
plot(x,betapdf, type='l', main='Beta-distribution PDF')
abline(v = CI95[[1]], lty = 2)
abline(v = CI95[[2]], lty = 2)
rm(list = ls())
P_test_pos_con_cancer_pos = 0.98
P_test_neg_con_cancer_neg = 0.96
P_cancer_pos = 1/1000
P_cancer_neg = 1 - P_cancer_pos
P_test_neg_con_cancer_pos = 1 - P_test_pos_con_cancer_pos
P_test_pos_con_cancer_neg = 1 - P_test_neg_con_cancer_neg
P_test_pos_and_cancer_pos = P_test_pos_con_cancer_pos * P_cancer_pos
P_test_neg = P_test_neg_con_cancer_neg * P_cancer_neg + P_test_neg_con_cancer_pos * P_cancer_pos
P_test_pos = 1-P_test_neg
P_cancer_pos_con_test_neg = (P_test_neg_con_cancer_pos * P_cancer_pos) /  P_test_neg
P_cancer_pos_con_test_pos = P_test_pos_con_cancer_pos * P_cancer_pos/ P_test_pos
cat(paste0("P(cancer=positive|test=neg)=",round(P_cancer_pos_con_test_neg*100,4),"%"),sep="")
cat(paste0("P(cancer=positive|test=positive)",round(P_cancer_pos_con_test_pos*100,4),"%"),sep="")
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
P_red(boxes = boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(res)
}
P_box(boxes = boxes)
p_identical_twin = function(fraternal_prob, identical_prob){
P_identical_con_sameSex = 1
}
install.packages("markmyassignment")
library(markmyassignment)
library(markmyassignment)
assignment_path <-
file.path(system.file(package = "markmyassignment"), "extdata", "assignment01.yml")
set_assignment(assignment_path)
library(markmyassignment)
assignment_path <-
file.path(system.file(package = "markmyassignment"), "extdata", "assignment01.rmd")
set_assignment(assignment_path)
library(markmyassignment)
assignment_path <-
file.path(system.file(package = "markmyassignment"), "extdata", "example_assignment01.yml")
set_assignment(assignment_path)
show_tasks()
library(markmyassignment)
assignment_path <-
paste("https://github.com/avehtari/BDA_course_Aalto/",
"blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
show_tasks()
library(markmyassignment)
assignment_path <-
paste("https://github.com/avehtari/BDA_course_Aalto/",
"blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
show_tasks()
mark_my_assignment()
library(markmyassignment)
assignment_path <-
paste("https://github.com/avehtari/BDA_course_Aalto/",
"blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
show_tasks()
mark_my_assignment("p_box")
library(markmyassignment)
#assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment("p_box")
library(markmyassignment)
#assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment("p_red")
rm(list = ls())
P_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
P_red(boxes = boxes)
P_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(res)
}
P_box(boxes = boxes)
library(markmyassignment)
#assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
rm(list = ls())
p_red = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
res = P_red_con_A*P_A + P_B*P_red_con_B + P_red_con_C * P_C
return(res)
}
boxes <- matrix(c(2,4,1,5,5,3), ncol = 2,dimnames = list(c("A", "B", "C"), c("red", "white")))
p_red(boxes = boxes)
p_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = P_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(res)
}
p_box(boxes = boxes)
p_box = function(boxes){
P_A = 0.4
P_B = 0.1
P_C = 1 - P_A - P_B
P_red_res = p_red(boxes = boxes)
P_red_con_A = boxes[1,1]/rowSums(boxes)[1]
P_red_con_B = boxes[2,1]/rowSums(boxes)[2]
P_red_con_C = boxes[3,1]/rowSums(boxes)[3]
P_A_con_red = P_red_con_A * P_A / P_red_res
P_B_con_red = P_red_con_B * P_B / P_red_res
P_C_con_red = P_red_con_C * P_C / P_red_res
res = c(P_A_con_red,P_B_con_red,P_C_con_red)
return(res)
}
p_box(boxes = boxes)
library(markmyassignment)
#assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
library(markmyassignment)
assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment("p_red")
library(markmyassignment)
assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment("p_box")
p_identical_twin = function(fraternal_prob, identical_prob){
P_boy = 1/2
P_ident_and_twin_boy = P_boy*identical_prob
P_frat_and_twin_boy = P_boy*P_boy*fraternal_prob
P_ident_con_twin_boy = P_ident_and_twin_boy/(P_ident_and_twin_boy+P_frat_and_twin_boy)
return(P_ident_con_twin_boy)
}
p_identical_twin = function(fraternal_prob, identical_prob){
P_boy = 1/2
P_ident_and_twin_boy = P_boy*identical_prob
P_frat_and_twin_boy = P_boy*P_boy*fraternal_prob
P_ident_con_twin_boy = P_ident_and_twin_boy/(P_ident_and_twin_boy+P_frat_and_twin_boy)
return(P_ident_con_twin_boy)
}
p_identical_twin(fraternal_prob = 1/125, identical_prob = 1/300)
p_identical_twin = function(fraternal_prob, identical_prob){
P_boy = 1/2
P_ident_and_twin_boy = P_boy*identical_prob
P_frat_and_twin_boy = P_boy*P_boy*fraternal_prob
P_ident_con_twin_boy = P_ident_and_twin_boy/(P_ident_and_twin_boy+P_frat_and_twin_boy)
return(P_ident_con_twin_boy)
}
p_identical_twin(fraternal_prob = 1/125, identical_prob = 1/400)
p_identical_twin = function(fraternal_prob, identical_prob){
P_boy = 1/2
P_ident_and_twin_boy = P_boy*identical_prob
P_frat_and_twin_boy = P_boy*P_boy*fraternal_prob
P_ident_con_twin_boy = P_ident_and_twin_boy/(P_ident_and_twin_boy+P_frat_and_twin_boy)
return(P_ident_con_twin_boy)
}
p_identical_twin(fraternal_prob = 1/150, identical_prob = 1/400)
library(markmyassignment)
assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment('p_identical_twin')
library(markmyassignment)
assignment_path <-  paste("https://github.com/avehtari/BDA_course_Aalto/","blob/master/assignments/tests/assignment1.yml", sep="")
set_assignment(assignment_path)
#show_tasks()
mark_my_assignment()
